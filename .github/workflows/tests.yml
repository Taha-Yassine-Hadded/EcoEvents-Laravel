name: CI - PHPUnit

on:
  pull_request:
  push:
    branches: [ main, master ]

jobs:
  tests:
    runs-on: ubuntu-latest
    env:
      APP_ENV: testing
      CACHE_DRIVER: array
      SESSION_DRIVER: array
      QUEUE_CONNECTION: sync
      BROADCAST_DRIVER: log
      MAIL_MAILER: array
      DB_CONNECTION: sqlite
      DB_DATABASE: ':memory:'

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: mbstring, intl, pdo, sqlite3
          coverage: xdebug

      - name: Cache Composer dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.composer/cache/files
            vendor
          key: composer-${{ runner.os }}-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            composer-${{ runner.os }}-

      - name: Install dependencies
        run: composer install --no-interaction --prefer-dist --no-progress

      - name: Prepare environment (.env and key)
        run: |
          cp .env.example .env || true
          php artisan key:generate --no-interaction --force

      - name: Prepare storage and cache directories
        run: |
          mkdir -p storage/framework/cache/data
          mkdir -p storage/framework/sessions
          mkdir -p storage/framework/views
          mkdir -p bootstrap/cache
          php artisan config:clear || true
          php artisan cache:clear || true
          php artisan view:clear || true

      - name: Run PHPUnit with coverage
        run: |
          php -d xdebug.mode=coverage vendor/bin/phpunit \
            --coverage-text \
            --coverage-clover=coverage.xml
